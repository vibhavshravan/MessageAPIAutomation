<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="3" hostname="TARS" failures="2" tests="37" name="Default test" time="5.736" errors="0" timestamp="2024-07-10T18:06:50 IST">
  <testcase classname="com.perrys.test.CreateMessage" name="sendMessage" time="3.358"/>
  <testcase classname="com.perrys.test.CreateMessage" name="sendReplyMessage" time="0.075"/>
  <testcase classname="com.perrys.test.CreateMessage" name="sendReplyMessageAgain" time="0.121"/>
  <testcase classname="com.perrys.test.CreateMessage" name="validateErrorForFromId" time="0.085"/>
  <testcase classname="com.perrys.test.CreateMessage" name="validateErrorForMessage" time="0.074"/>
  <testcase classname="com.perrys.test.CreateMessage" name="validateErrorForToId" time="0.077"/>
  <testcase classname="com.perrys.test.DeleteMessage" name="deleteUsingMessageId" time="0.056"/>
  <testcase classname="com.perrys.test.GetMessage" name="getUsingMessageId" time="0.091"/>
  <testcase classname="com.perrys.test.GetMessage" name="validateGetDeletedMessageId" time="0.028"/>
  <testcase classname="com.perrys.test.GetMessage" name="validateInvalidMessageId" time="0.026"/>
  <testcase classname="com.perrys.test.ListMessage" name="getListFromTo" time="0.161"/>
  <testcase classname="com.perrys.test.ListMessage" name="getListToFrom" time="0.09"/>
  <testcase classname="com.perrys.test.ListMessage" name="validateEitherFromOrToAsBlank" time="0.049">
    <failure type="java.lang.AssertionError" message="1 expectation failed.
Expected status code &amp;lt;404&amp;gt; but was &amp;lt;200&amp;gt;.
">
      <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <404> but was <200>.

at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:108)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:57)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:263)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)
at io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:135)
at io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:143)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)
at com.perrys.test.ListMessage.validateEitherFromOrToAsBlank(ListMessage.java:100)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
    </failure>
  </testcase> <!-- validateEitherFromOrToAsBlank -->
  <testcase classname="com.perrys.test.ListMessage" name="validateNoMessageBetweenFromTo" time="0.031">
    <failure type="java.lang.AssertionError" message="1 expectation failed.
Expected status code &amp;lt;404&amp;gt; but was &amp;lt;200&amp;gt;.
">
      <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <404> but was <200>.

at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:108)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)
at io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:135)
at io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:143)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)
at com.perrys.test.ListMessage.validateNoMessageBetweenFromTo(ListMessage.java:83)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
    </failure>
  </testcase> <!-- validateNoMessageBetweenFromTo -->
  <testcase classname="com.perrys.test.CreateMessage" name="sendMessage" time="0.072"/>
  <testcase classname="com.perrys.test.CreateMessage" name="sendReplyMessage" time="0.04"/>
  <testcase classname="com.perrys.test.CreateMessage" name="sendReplyMessageAgain" time="0.073"/>
  <testcase classname="com.perrys.test.CreateMessage" name="validateErrorForFromId" time="0.066"/>
  <testcase classname="com.perrys.test.CreateMessage" name="validateErrorForMessage" time="0.055"/>
  <testcase classname="com.perrys.test.CreateMessage" name="validateErrorForToId" time="0.066"/>
  <testcase classname="com.perrys.test.CreateMessage" name="sendMessage" time="0.04"/>
  <testcase classname="com.perrys.test.CreateMessage" name="sendReplyMessage" time="0.049"/>
  <testcase classname="com.perrys.test.CreateMessage" name="sendReplyMessageAgain" time="0.075"/>
  <testcase classname="com.perrys.test.CreateMessage" name="validateErrorForFromId" time="0.058"/>
  <testcase classname="com.perrys.test.CreateMessage" name="validateErrorForMessage" time="0.055"/>
  <testcase classname="com.perrys.test.CreateMessage" name="validateErrorForToId" time="0.061"/>
  <testcase classname="com.perrys.test.DeleteMessage" name="deleteUsingMessageId" time="0.021"/>
  <testcase classname="com.perrys.test.GetMessage" name="getUsingMessageId" time="0.067"/>
  <testcase classname="com.perrys.test.GetMessage" name="validateGetDeletedMessageId" time="0.014"/>
  <testcase classname="com.perrys.test.GetMessage" name="validateInvalidMessageId" time="0.019"/>
  <testcase classname="com.perrys.test.CreateMessage" name="sendMessage" time="0.044"/>
  <testcase classname="com.perrys.test.CreateMessage" name="sendReplyMessage" time="0.037"/>
  <testcase classname="com.perrys.test.CreateMessage" name="sendReplyMessageAgain" time="0.079"/>
  <testcase classname="com.perrys.test.CreateMessage" name="validateErrorForFromId" time="0.062"/>
  <testcase classname="com.perrys.test.CreateMessage" name="validateErrorForMessage" time="0.07"/>
  <testcase classname="com.perrys.test.CreateMessage" name="validateErrorForToId" time="0.099"/>
  <testcase classname="com.perrys.test.DeleteMessage" name="deleteUsingMessageId" time="0.021"/>
  <testcase classname="com.perrys.library.ReusableMethods" name="@BeforeSuite setFromAndToId" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite setFromAndToId -->
  <testcase classname="com.perrys.library.ReusableMethods" name="@BeforeSuite setFromAndToId" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite setFromAndToId -->
  <testcase classname="com.perrys.library.ReusableMethods" name="@BeforeSuite setFromAndToId" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite setFromAndToId -->
</testsuite> <!-- Default test -->
